
@mixin b($block) {
  .#{$namespace + $block-separator + $block} {
    @content;
  }
}

@mixin e($element) {
  $selector: &;
  $B: getBlockSelector() !global;
  $currentSelector: $B + $element-separator + $element;
  @if needNest() {
    @at-root {
      #{$selector} {
        #{$currentSelector} {
          @content;
        }
      }
    }
  } @else {
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
}

@mixin m($modifier) {
  $currentSelector: & + $modifier-separator + $modifier;
  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin spec-selector($specSelector, $block, $element: '') {
  @if $element != '' {
    $element: $element-separator + $element;
  }
  @if $block {
    $block: '.' + $namespace + $block-separator + $block;
  } @else {
    $block: $B;
  }
  @at-root {
    #{&}#{$specSelector}#{$block + $element } {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

@mixin share-rule($name) {
  $rule-name: '%shared-' + $name;
  @at-root #{$rule-name} {
    @content;
  }
}

@mixin extend-rule($name) {
  @extend #{'%shared-' + $name};
}

@mixin pseudo($pseudo) {
  @at-root #{&}#{'::#{$pseudo}'} {
    @content;
  }
}
